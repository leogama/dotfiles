# ~/.bashrc: executed by bash in non-login interactive mode
# vi: set ft=bash.sh :

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

source "$HOME/.local/lib/utils.sh"


### BEHAVIOR ###

# Enable programmable completion features.
if ! shopt -oq posix; then
    try_source /usr/share/bash-completion/bash_completion
fi

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
shopt -s globstar


### HISTORY ###

# Don't put duplicate lines or lines starting with space in the history.
HISTCONTROL=ignoreboth:erasedups

# Append to the history file, don't overwrite it.
shopt -s histappend


### EXIBITION ###

# Check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# Make less more friendly for non-text input files, see lesspipe(1).
#[[ -x /usr/bin/lesspipe ]] && eval "$(SHELL=/bin/sh lesspipe)"

# Enable color support of ls and grep
if [[ -x /usr/bin/dircolors ]]; then
    eval "$(dircolors -b)"
fi


### PROMPT ###

# If this is an xterm set color and change the title to user@host:dir
#case "$TERM" in
#    xterm*|rxvt*)
#        color_prompt=yes
#        PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME}: ${PWD/$HOME/~}\007"'
#        ;;
#esac
# or...
# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# Uncomment to force a colored prompt, if the terminal has the capability.
#force_color_prompt=yes
#if [[ -n $force_color_prompt ]]; then
#    if [[ -x /usr/bin/tput ]] && tput setaf 1 >&/dev/null; then
#        color_prompt=yes
#    fi
#fi
# or...
#if [ -n "$force_color_prompt" ]; then
#    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
#        # We have color support; assume it's compliant with Ecma-48
#        # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
#        # a case would tend to support setf rather than setaf.)
#        color_prompt=yes
#    else
#        color_prompt=
#    fi
#fi

# Define prompt appearence.
if [[ "$color_prompt" == yes ]]; then
    PS1='\[\e[0;32m\][\t]\[\e[m\] \[\e[1;34m\]\u@\h:\w \$\[\e[m\] '
    PS2='> '
else
    PS1='[\t] \u@\h:\w \$ '
fi
# or...
#if [ "$color_prompt" = yes ]; then
#    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
#else
#    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
#fi

unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
#case "$TERM" in
#xterm*|rxvt*)
#    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
#    ;;
#*)
#    ;;
#esac


# Read local bash settings and aliases.
try_source "$HOME/.config/bash/bashrc"
try_source "$HOME/.config/sh/alias.sh"
try_source "$HOME/.config/bash/alias.sh"
