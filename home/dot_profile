# ~/.profile: executed by login shells (including desktop sessions)
# vi: set ft=bash.sh :

# Set default XDG directories not set by antidot.
export XDG_STATE_HOME="${XDG_STATE_HOME:-$HOME/.local/state}"
export XDG_USER_PATH="${XDG_USER_PATH:-$HOME/.local/bin}"

# Add user executables to PATH.
if [ -d "$XDG_USER_PATH" ]; then
    PATH="$XDG_USER_PATH:$PATH"
fi

# antidot: set XDG default directories, environment variables and aliases.
eval "$(antidot init | sed 's/then source/then ./')"

# Identify operating system.
case "$(uname -s)" in
    Linux*)     OSNAME=Linux;;
    Darwin*)    OSNAME=macOS;;
    *)          OSNAME="UNKNOWN:$OSNAME";;
esac
export OSNAME

# Identify number of *logical* cores available.
#
# nproc:    GNU Coreutils tool
# sysctl:   macOS tool/API
# getconf:  POSIX tool
#   _NPROCESSORS_ONLN:  Linux and macOS
#   NPROCESSORS_ONLN:   FreeBSD, etc.
#
# Reference: https://stackoverflow.com/q/6481005/3738764
export NCPUS="$({
    nproc ||
        sysctl -n hw.logicalcpu_max ||
        getconf _NPROCESSORS_ONLN ||
        getconf NPROCESSORS_ONLN;
} 2>/dev/null)"

# Set $EDITOR from least to most preferred.
for cmd in nano vi nvim vim; do
    if command -v $cmd >/dev/null; then
        EDITOR=$cmd
    fi
done
export EDITOR

# Set some tools.
export PAGER='less -S'

# # Set TexLive Manager directory.
# if is_command tlmgr; then
#     export TEXMFHOME="$HOME/.tlmgr"
# fi
#
# # Configure ssh-agent.
# if is_command ssh-agent; then
#     export SSH_AUTH_SOCK="$HOME/.ssh/auth_sock"
#     if [ ! -S "$SSH_AUTH_SOCK" ]; then
#         $(AUTH_SOCK_LINK="$SSH_AUTH_SOCK"; eval $(ssh-agent) >/dev/null && ln -sf "$SSH_AUTH_SOCK" "$AUTH_SOCK_LINK")
#     fi
#     #ssh-add -l >/dev/null || ssh-add ~/.ssh/id*
# fi
#
# # Used by x11_update() function in R.
# if [ -n "$DISPLAY" ] && is_command R; then
#     mkdir -p "$HOME/.local/state/R"
#     echo "$DISPLAY" > "$HOME/.local/state/R/display"
# fi

# Read local profile if it exists.
__try_source () {
    if [ -r "$1" ]; then . "$1"; fi
}

__try_source "$HOME/.config/sh/profile.local.sh"

if [ -d "$XDG_CONFIG_HOME/sh/profile.d" ]; then
    for profile in "$XDG_CONFIG_HOME/sh/profile.d"/*.sh; do
        __try_source "$profile"
    done
fi

unset -f __try_source
